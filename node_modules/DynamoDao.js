exports.DynamoDao = class DynamoDao {


    putMeta(type,structure,currentIndex,nextIndex,status,callback) {

        let metaTable = this.metaTable;

        let params = {
            Item: {
                "type" : { S: type },
                "structure" : { S: structure },
                "currentIndex" : { S: currentIndex },
                "nextIndex" : { S: nextIndex },
                "status" : { S: status }
            },
            TableName: metaTable,
            ReturnConsumedCapacity: "TOTAL",
            ReturnValues: "ALL_OLD"
        };


        // noinspection JSUnresolvedVariable,JSUnresolvedFunction
        this.dynamoDB.putItem(params, function(err, data) {
            if (err) {
                console.log('ERROR UPDATING ' + metaTable + ':', err);
                if (callback !== null) callback(err,null);
            }
            else {
                console.log('SUCESSFULY UPDATED ' + metaTable + ':', params.Item , data);
                if (callback !== null) callback(null,params.Item);
            }
        });

    }


    getMeta(docType, callback) {

        let metaTable = this.metaTable;
        let params = {
            TableName: metaTable,
            Key: {
                'type' : {S: docType},
            }
        };

        this.dynamoDB.getItem(params, function(err, data) {
            if (err) {
                callback(err,null);
            } else {
                let meta = data.Item || null;
                let item = typeof data.Item !== 'undefined' ? {
                    type : typeof meta['type'] !== 'undefined' ? meta['type']['S'] : '',
                    structure : typeof meta['structure'] !== 'undefined' ? meta['structure']['S'] : '',
                    currentIndex: typeof meta['currentIndex'] !== 'undefined' ? meta['currentIndex']['S'] : '',
                    nextIndex : typeof meta['nextIndex'] !== 'undefined' ? meta['nextIndex']['S'] : '',
                    status: typeof meta['status'] !== 'undefined' ? meta['status']['S'] : ''
                } : null;

                callback(null,item);
            }
        });
    }


    // noinspection JSMethodCanBeStatic
    indexData(docType, elastic, newIndexName, callback) {

        callback(null, {'message':'simulated from ' + this.dataTable});

    }


    constructor(dynamoDb, metaTable, dataTable) {
        // noinspection JSUnusedGlobalSymbols
        this.dynamoDB = dynamoDb;
        this.metaTable = metaTable;
        this.dataTable = dataTable;
    }

};